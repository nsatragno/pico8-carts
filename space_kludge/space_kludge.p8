pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
-- space kludge
-- by kat and nina

k_max_safe_number = sqrt(0x7fff)
function normalize(x, y)
 local l
 -- prevent overflow
 if x >= k_max_safe_number or
    x <= -k_max_safe_number or
    y >= k_max_safe_number or
    y <= -k_max_safe_number then
  local nx = x * 0x0.01
  local ny = y * 0x0.01
  l = sqrt(nx * nx + ny * ny) * 0x100
 else
  l = sqrt(x * x + y * y)
 end

 return { x = x / l, y = y / l }
end

function vector_to_player(element)
 return normalize(g_player.x - element.x, g_player.y - element.y)
end

function colliding_p_r(point, rect)
  return point.x >= rect.x and point.x <= rect.x + 8 and
         point.y >= rect.y and point.y <= rect.y + 8
end  -- colliding

function colliding_r_r(rect1, rect2)
  return rect1.x <= rect2.x + 8 and
         rect1.x + 8 >= rect2.x and
         rect1.y <= rect2.y + 8 and
         rect1.y + 8 >= rect2.y
end

function colliding_r_player(rect)
  -- the player is two rectangles stacked on top of each other
  return colliding_r_r(g_player, rect) or
         colliding_r_r({x = g_player.x, y = g_player.y + 8}, rect)
end

function create_player()
  return {
    x = 88,
    y = 114,
    dx = 0,
    dy = 0.2,
    facing = 1,
    inventory = {},
    show_inventory = false,
    equipped_item = nil,
    hp = 6,

    -- the number of frames you can hold the jump button to go higher
    jump_ticks = 0,

    -- the number of frames the player held an arrow key
    movement_ticks = 0,

    draw = function(self)
      -- todo draw proper death animation
      if self.hp > 0 then
        local top_sprite = 0
        local bottom_sprite = 16 + movement_ticks / 5 % 4

        if self.jump_ticks > 0 then
          top_sprite = 4
          bottom_sprite = 20
        end

        spr(top_sprite, self.x, self.y, 1, 1, self.facing != 1)
        spr(bottom_sprite, self.x, self.y + 8, 1, 1, self.facing != 1)
      end
      if self.hint then
        local y = flr(get_sine_wave(flr(self.y) - 6, 1))
        rectfill(self.x, y + 1, self.x + 6, y + 3, 0)
        print(self.hint, self.x, y, 7)
      end
    end,  -- player:draw

    update = function(self)
      self.hint = nil
      if self.hp <= 0 then
        return
      end

      self.in_space = g_map:is_space(self.x + 4, self.y + 8)

      if btnp(❎) then
        self.show_inventory = not self.show_inventory
        self.selected_index = 0
      end

      if self.show_inventory then
        if btn(⬇️) then
          self.selected_index += 1
        elseif btn(⬆️) then
          self.selected_index -= 1
        elseif btnp(🅾️) then
          if self.equipped_item == self.inventory[self.selected_index] then
            self.equipped_item = nil
          else
            self.equipped_item = self.inventory[self.selected_index]
          end
        end
        self.selected_index = mid(1, self.selected_index, #self.inventory)
      else
        if not self.in_space then
          if btn(➡️) then
            movement_ticks += 1
            self.dx += 0.25
            self.facing = 1
          elseif btn(⬅️) then
            movement_ticks += 1
            self.dx -= 0.25
            self.facing = -1
          else
            movement_ticks = 0
            if self.dx > 0 then
              self.dx -= 0.125
            elseif self.dx < 0 then
              self.dx += 0.125
            end
          end
          self.dx = mid(-1, self.dx, 1)
        end

        for actor in all(g_actors) do
          if actor.activatable and
             colliding_p_r({x = self.x + 4, y = self.y + 8}, actor) then
            if btnp(⬇️) then
              actor:activate()
            end
            self.hint = "⬇️"
          end
        end
      end

      if not self.in_space then
        if btn(⬇️) then
          self.dy += 0.4
        end
        -- downwards acceleration (gravity)
        self.dy += 0.1
      end
      self.dy = min(self.dy, 3)

      local points = {
        { x = 0, y = 15 },
        { x = 7, y = 15 },
        { x = 0, y = 7 },
        { x = 7, y = 7 },
        { x = 0, y = 0 },
        { x = 7, y = 0 },
      }
      local on_floor = false
      for point in all(points) do
        -- vertical collisions
        if g_map:is_solid(point.x + self.x, point.y + self.dy + self.y) then
          local tile_y = g_map:clamp(
            point.x + self.x, point.y + self.dy + self.y).y
          if self.dy < 0 then
            -- hit a ceiling
            self.y = tile_y + 8
          else
            self.y = tile_y - 16
            -- hit a floor
            on_floor = true
          end
          self.dy = 0
        end

        -- horizontal collisions
        if g_map:is_solid(point.x + self.dx + self.x, point.y + self.y) then
          self.dx = 0
        end

        -- pick up items
        for actor in all(g_actors) do
          if actor.pickable and colliding_r_player(actor) then
            add(self.inventory, actor)
            del(g_actors, actor)
          end
        end
      end

      self.x += self.dx
      self.y += self.dy

      if not self.show_inventory then
        if btn(⬆️) and on_floor then
          -- jump
          self.jump_ticks = 15
        end

        if self.jump_ticks > 0 then
          self.jump_ticks -= 1
          if btn(⬆️) then
            self.dy = -1.8
          end
        end

        if btn(🅾️) then
          if self.equipped_item then
            self.equipped_item:use()
          end
        end
      end
    end,  -- player:update

    draw_inventory = function(self)
      camera()
      rectfill(8, 28, 120, 100, 0)
      rect(7, 27, 121, 101, 1)
      print("inventory", 46, 30, 7)
      for i = 1, #self.inventory do
        print(self.inventory[i].name, 30, 30 + i * 10, 7)
        if i == self.selected_index then
          print(">", 12, 30 + i * 10)
        end
        if self.equipped_item == self.inventory[i] then
          print("e", 22, 30 + i * 10, 8)
        end
      end
      if #self.inventory <= 0 then
        print("[empty]", 30, 40, 7)
      end
      camera(g_camera.x, g_camera.y)
    end,  -- player:draw_inventory

    take_damage = function(self, damage)
      self.hp -= damage
      self.dy = -1
    end,  -- player:take_damage
  }
end  -- create_player

function create_denuvo(x, y, dx, dy)
  return {
    x = x,
    y = y,
    dx = dx,
    dy = dy,
    state = "flying",
    damaged_points = {},

    update = function(self)
      if self.state == "flying" then
        self.x += self.dx
        self.y += self.dy
        -- todo remove when out of bounds
        local points = {
          {
            x = self.x + 4,
            y = self.y
          },
          {
            x = self.x + 8,
            y = self.y + 4
          },
          {
            x = self.x + 4,
            y = self.y + 8
          },
          {
            x = self.x,
            y = self.y + 4
          },
        }
        for point in all(points) do
          local sprite = g_map:get_sprite(point.x, point.y)
          if fget(sprite, 0) then
            self.state = "attached"
            self.attached_to = g_map:clamp(point.x, point.y)
          end
        end
      elseif self.state == "attached" then
        create_particle(self.x + 4, self.y + 4, rnd(2) - 1, rnd(2) - 1, 20, 2)
        if flr(time() * 10) % 2 == 0 then
          add(self.damaged_points, {
            x = self.attached_to.x + rnd(8), y = self.attached_to.y + rnd(8)
          })
          if #self.damaged_points >= 100 then
            self.state = "flying"
            self.dx = -dx
            self.dy = -dy
            mset(self.attached_to.x \ 8, self.attached_to.y \ 8, 0)
            add(g_actors, create_hull_puncture(
              self.attached_to.x, self.attached_to.y, self.dx, self.dy))
          end
        end
      end
    end,  -- denuvo:update

    draw = function(self)
      spr(32, self.x, self.y)
      if self.state == "attached" then
        for damaged_point in all(self.damaged_points) do
          pset(damaged_point.x, damaged_point.y, 0)
        end
      end
    end,  -- denuvo:draw
  }
end  -- create_denuvo

function create_hull_puncture(x, y, dx, dy)
  return {
    update = function()
      if flr(time() * 10) % 2 == 0 then
        create_particle(x + rnd(8), y + rnd(8), dx, dy, 30, 4)
      end
      if not g_player.in_space and
         abs(g_player.x - x) < 50 and
         abs(g_player.y - y) < 50 then
        if dx == 0 and flr(g_player.x) != flr(x) then
          g_player.dx -= sgn(g_player.x - x) * 0.15
        else
          g_player.dx = dx
        end
        if dy == 0 then
          g_player.dy = sgn(g_player.y - y) * 0.2
        else
          g_player.dy = dy * 2
        end
      end
    end,  -- hull_puncture:update

    draw = function()
      -- todo draw a sprite
    end,  -- hull_puncture:draw
  }
end

function create_dialog(messages)
  return {
    ticks = 0,
    messages = messages,

    set = function(self, messages)
      self.messages = messages
      self.ticks = 0
    end,  -- dialog:set

    update = function(self)
      if #self.messages <= 0 then
        return true
      end
      self.ticks += 1
      self.current_message = sub(self.messages[1].text, 0, self.ticks / 5)
      if self.ticks / 5 > #self.messages[1].text + 12
         and not self.messages[1].persistent then
        self.ticks = 0
        deli(self.messages, 1)
      end
    end,  -- dialog:update

    draw = function(self)
      if #self.messages <= 0 then
        return
      end
      camera()
      rectfill(0, 0, 127, 15, 12)
      print(self.current_message, 18, 2, 7)
      palt(0, false)
      spr(self.messages[1].sprite, 0, 0, 2, 2)
      palt()
      camera(g_camera.x, g_camera.y)
    end,  -- dialog:draw
  }
end  -- create_dialog

function create_particle(x, y, dx, dy, life, color)
  local particle = {
    x = x,
    y = y,
    dx = dx,
    dy = dy,
    life = life,
    color = color,

    update = function(self)
      self.life -= 1
      if self.life <= 0 then
        return true
      end
      if g_map:is_solid(self.x + self.dx, self.y) then
        self.dx *= -1
      end
      if g_map:is_solid(self.x, self.y + self.dy) then
        self.dy *= -1
      end
      self.x += self.dx
      self.y += self.dy

      if self._update then
        return self._update()
      end
    end,  -- particle:update

    draw = function(self)
      pset(self.x, self.y, self.color)
    end,  -- particle:draw
  }
  add(g_actors, particle)
  return particle
end  -- create_particle

function get_sine_wave(y, multiplier)
  return y + sin(time() / multiplier) * multiplier - multiplier + 0.5
end  -- get_sine_wave

function draw_item(item, sprite)
  spr(sprite, item.x, get_sine_wave(item.y, 2))
end  -- draw_item

function create_extinguisher(x, y)
  return {
    x = x,
    y = y,
    pickable = true,
    name = "fire extinguisher",
    draw = function(self)
      draw_item(self, 36)
    end,  -- extinguisher:draw
    use = function()
      local x_offset = 0
      if g_player.facing == 1 then
        x_offset = 8
      end
      local particle = create_particle(
        g_player.x + x_offset, g_player.y + 8,
        g_player.facing + rnd(2) - 1, rnd(1),
        30, flr(rnd(2)) + 6)
        particle._update = function(self)
          for actor in all(g_actors) do
            if actor.name == "fire" then
              if colliding_p_r(self, actor) then
                actor:take_damage(1)
                return true
              end
            end
          end
      end  -- extinguisher_particle:update
    end,  -- extinguisher:use
  }
end  -- create_extinguisher

function create_jetpack(x, y)
  return {
    x = x,
    y = y,
    fuel = 1000,
    pickable = true,
    name = "jetpack",
    draw = function(self)
      draw_item(self, 36)
    end,  -- jetpack:draw
    use = function(self)
      self.fuel -= 1
      if self.fuel <= 0 then
        return true
      end
      g_player.dy -= 0.12
      g_player.dy = min(-0.8, g_player.dy)
      local x_offset = 0
      if g_player.facing == -1 then
        x_offset = 8
      end

      create_particle(g_player.x + x_offset, g_player.y + 8,
                      -g_player.facing * rnd(0.3), 1.5 + rnd(0.5),
                      30, 2)
    end,  -- jetpack:use
  }
end  -- create_jetpack

function create_enemy(x, y, name, hp)
  return {
    x = x,
    y = y,
    dx = 0,
    dy = 0,
    name = name,
    hp = hp,
    damage = 1,

    update = function(self)
      if self.hp <= 0 then
        return true
      end

      self.x += self.dx
      self.y += self.dy

      if colliding_r_player(self) then
        g_player:take_damage(self.damage)
      end
    end,  -- enemy:update()

    take_damage = function(self, damage)
      self.hp -= damage
    end,  -- enemy:take_damage
  }
end  -- create_enemy

function create_switch(x, y, target)
  return {
    x = x,
    y = y,
    target = target,
    on = false,
    activatable = true,

    update = function(self)
    end,  -- switch:update

    draw = function(self)
      if self.on then
        pal({[8] = 11})
      end
      spr(37, self.x, self.y)
      pal()
    end,  -- switch:draw

    activate = function(self)
      self.on = not self.on
      self.target:toggle(self.on)
    end
  }
end

function create_door(x, y, size)
  return {
    x = x,
    y = y,
    size = size,
    status = "closing",
    is_solid = true,
    pixels_up = 0,
    direction = 1,

    get_rects = function(self)
      local rects = {}
      for i = 0, (size - 1) do
        add(rects, {x = self.x, y = self.y + i * 8})
      end
      return rects
    end,  -- door:get_rects

    update = function(self)
      if self.direction == -1 and self.pixels_up < size * 8 then
        self.pixels_up += 1
        if self.pixels_up >= size * 8 then
          self.is_solid = false
        end
      elseif self.direction == 1 and self.pixels_up > 0 then
        self.pixels_up -= 1
        self.is_solid = true
      end
    end,  -- door:update

    draw = function(self)
      palt(0, false)
      clip(x - flr(g_camera.x), y - flr(g_camera.y), 8, 8 * size)
      for i = 0, (size - 1) do
        local sprite = 38
        if i >= 1 then
          sprite += 16
        end
        spr(sprite, x, y + i * 8 - self.pixels_up)
      end
      clip()
      palt()
    end,  -- door:draw

    collides_with = function(self, x, y)
      for rect in all(self:get_rects()) do
        if colliding_p_r({x = x, y = y}, rect) then
          return true
        end
      end
    end,  -- door:collides_with_player

    toggle = function(self, on)
      if on then
        self.direction = -1
      else
        for rect in all(self:get_rects()) do
          if colliding_r_player(rect) then
            if g_player.x < rect.x + 4 then
              g_player.x = rect.x - 8
            else
              g_player.x = rect.x + 9
            end
          end
        end
        self.direction = 1
      end
    end,  -- door:toggle
  }
end  -- create_door

function create_fire(x, y)
  local fire = create_enemy(x, y, "fire", 12)

  fire.draw = function(self)
    local sprite
    if self.hp > 8 then
      sprite = 108
    elseif self.hp > 4 then
      sprite = 109
    else
      sprite = 110
    end
    if flr(time() * 10) % 2 == 0 then
      sprite += 16
    end
    spr(sprite, self.x, self.y)
  end  -- fire:draw
  return fire
end  -- create_fire

function create_tutorial_script(messages, target)
  local first_time = true

  return {
    toggle = function(self, on)
      if first_time then
        g_dialog:set(messages)
        first_time = false
      end
      target:toggle(on)
    end,  -- switch.target:toggle
  }
end  -- create_tutorial_script

function _init()
  g_player = create_player()
  g_actors = {}

  g_background = {
    stars = {},

    update = function(self)
      for star in all(self.stars) do
        star.x -= .4 * star.scale
        if star.x < 0 then
          star.x = 1024
        end
      end
    end,  -- background:update

    draw = function(self)
      for star in all(self.stars) do
        pset(star.x, star.y, 7)
      end
    end,  -- background:draw
  }
  for i = 0, 500 do
    add(g_background.stars, {
      x = rnd(1024),
      y = rnd(512),
      scale = rnd(1)
    })
  end

  add(g_actors, create_door(144, 104, 2))
  add(g_actors, create_switch(136, 112, create_tutorial_script({
    {
      text = "jump (⬆️) to make it\nthrough the cargo",
      sprite = 32,
      persistent = true,
    }
  }, g_actors[#g_actors])))
  add(g_actors, create_switch(152, 112, g_actors[#g_actors - 1]))
  add(g_actors, create_door(512, 40, 3))
  add(g_actors, create_switch(504, 56, create_tutorial_script({
    {
      text = "make haste!\ni need to use that toilet!",
      sprite = 32,
    },
    {
      text = "use the teleporter to\nquickly get there",
      sprite = 32,
      persistent = true,
    },
  }, g_actors[#g_actors])))
  add(g_actors, create_door(554, 40, 3))
  add(g_actors, create_switch(562, 56, g_actors[#g_actors]))

  add(g_actors, create_extinguisher(164, 112))
  add(g_actors, create_jetpack(124, 112))

  --add(g_actors, create_denuvo(120, 0, 0, 0.2))

  g_map = {
    draw = function(self)
      palt(0, false)
      palt(14, true)
      map(0, 0, 0, 0, 128, 64)
      palt()
    end,  -- map:draw

    get_sprite = function(self, x, y)
      return mget(x \ 8, y \ 8)
    end,  -- map:get_sprite

    is_solid = function(self, x, y)
      if fget(self:get_sprite(x, y), 0) then
        return true
      end
      for actor in all(g_actors) do
        if actor.is_solid and actor:collides_with(x, y) then
          return true
        end
      end
    end,  -- map:is_solid

    is_space = function(self, x, y)
      return self:get_sprite(x, y) == 0
    end,  -- map:is_space

    clamp = function(self, x, y)
      return { x = (x \ 8) * 8, y = (y \ 8) * 8 }
    end,  -- map:coordinates_for
  }

  g_camera = {
    x = g_player.x - 64,
    y = g_player.y - 64,

    update = function(self)
      self.x = g_player.x - 64
      self.y = g_player.y - 64
    end,  -- camera:update
  }

  g_dialog = create_dialog({
    {
      text = "amber! amber! wake up!\nwe have an emergency!",
      sprite = 32,
    },
    {
      text = "the toilet in cargo bay c\nis clogged again!",
      sprite = 32,
    },
    {
      text = "can you go take a look?",
      sprite = 32,
    },
    {
      text = "open (⬇️) that door and get\nthere quick!",
      sprite = 32,
      persistent = true,
    },
  })
  add(g_actors, g_dialog)

  add(g_actors, g_player)
end  -- _init()

function _update60()
  g_background:update()
  for actor in all(g_actors) do
    if actor.update and actor:update() then
      del(g_actors, actor)
    end
  end
end  -- _update60

function _draw()
  cls()
  g_camera:update()
  camera(g_camera.x, g_camera.y)
  g_background:draw()
  g_map:draw()
  for actor in all (g_actors) do
    actor:draw()
  end
  if g_player.show_inventory then
    g_player:draw_inventory()
  end
end  -- _draw
__gfx__
00909000009090000009900000909000009090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00994750009947509099475000994750009947500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99944550999445500994455009944550099445500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
09444cf009444ff009444cf009444fc099444cf00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9444fcf09444fcf09444fcf09944ffcf9444fcff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
04ffffff04ffffff04ffffff044ffff004fffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00fffff000fffff000fffff000ffff0000ffffc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00999f0000999f0000999f0000999f00009997cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0947599009475990094759cc094759900947755c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00455499004554990045599c00475c99004555900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00455449004554490045549900455cc9004444900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
044ccc40044ccc0c04cc444000045cc0004444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
044cc400044cc4cc04cc444000444440044440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00444400054444cc00444cc00cc44440055cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00cc55005550000000550ccc0cc40550055cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00ccc550055500055555117755555555050c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000ffffff44665551111711755555000000001166661165555555000000000000000000000000000000000000000000000000000000000000000000000000
00000ffffffff466551111111755555500055000160700619665555a000000000000000000000000000000000000000000000000000000000000000000000000
00000f77ff77f44651111111795555555557550060788006a94444a9000000000000000000000000000000000000000000000000000000000000000000000000
00000744f7447446111111999995555500788550678a88069a44449a000000000000000000000000000000000000000000000000000000000000000000000000
00000f00f400446f11119900009555550078800060888806a94444a9000000000000000000000000000000000000000000000000000000000000000000000000
000000fff4ff046f119999f00055555500888000600880069a44449a000000000000000000000000000000000000000000000000000000000000000000000000
00000ffff44ff66f59ff9fff00f555550088800016000061a94444a9000000000000000000000000000000000000000000000000000000000000000000000000
00007fff444ff66659ff9ffffff5555500888000116666119a44449a000000000000000000000000000000000000000000000000000000000000000000000000
005507ffffff7666589f9fffffff55551166661111666611a94444a9000700000000000000000000000000000000000000000000000000000000000000000000
00555555000f776655999fff9955555516060061160700619a44449a0007b0000000000000000000000000000000000000000000000000000000000000000000
000007fffff0f765777999ff995555556008600660700b06a94444a9007bb0700000000000000000000000000000000000000000000000000000000000000000
0000b7f777ff7655577789999f555555608a680667b00b069a44449a07bbb0bb0000000000000000000000000000000000000000000000000000000000000000
000bb5777b7766555557788999955555608686066b0000b6a94444a9222222220000000000000000000000000000000000000000000000000000000000000000
005555777b36655b57757778899555556006860660bbbb069a44449a227227b20000000000000000000000000000000000000000000000000000000000000000
00575777773655b377775577775555551060006116000061a94444a927b22b220000000000000000000000000000000000000000000000000000000000000000
00557777766555b3777777577755555511660611116666119a44449a2b2222220000000000000000000000000000000000000000000000000000000000000000
444994444449944449944994499049949999999999999999e11111110000000000000000000000006dddddd66dddddd600000555555555550000000000000000
4994499449944394449944994409449944444444444444441aaaa444000000000000000000000000dd666666666666dd00005aaaaaaaaaaa0000000000000000
944444499444333344994499449940994044440440444404aa444441000000000000000000000000d66000000000066d00088888888888880000000000000000
499449944994433444994499449940994440044444400444a444441a000000000000000000000000d60000000000006d08888555555588550000000000000000
444994444449943494499449944994094044440440444404444441aa000000000000000000000000d60000000000006d08855855555855850000000000000000
66666666666666666666666666666606666666666666666644441aa4000000000000000000000000d60000000000006d88555855555855850000000000000000
56565656565656565656565656565650565656565656565644414444000000000000000000000000d60000000000006d88555855555855850000000000000000
55555555555555555555555555555555555555555555555555555555000000000000000000000000660000000000006688555855555855850000000000000000
4455554433555544dd0000dddd0000dd000000006dddddddddddddd6000000000000000000000000660000000000006688555855555855850000000000000000
44455444335554440dd0ffd00dd00dd000000000dd000000944664dd000000000000000000000000d60000000000006d88555855555855850000000000000000
4445544443455444005855000055550000000000d00000009446644d000000000000000000000000d60000000000006d88555855555855850000000000000000
5555555555555555555585555555555500000000d00000009446644d000000000000000000000000d60000000000006d08855855555855850000000000000000
4455554434555544005555000055550000000000d77003394466446d000000000000000000000000d60000000000006d08888555555588550000000000000000
44455444334554440dd00dd00dd00dd000000000d77703394466446d000000000000000000000000d66000000000066d00088888888888880000000000000000
4445544443455444dd0000dddd0000dd00000000dd773394466446dd000000000000000000000000dd666666666666dd00005aaaaaaaaaaa0000000000000000
55555555535555555555555555555555000000006dd33dddddddddd60000000000000000000000006dddddd66dddddd600000555555555550000000000000000
6dddddd6666dddd66dddddd66666666660ddddd66dddddd66dddddd66dddddd66dddddd600000000000000000000000000000000000000000000000000000000
dd6666dd666dd0dddddddddd66666666dd0ddddd6dddddd660d000066dddddd660d0000600000000000000000000000000000000000000000000000000000000
d66ee66d6660dd0ddddd666666666666d5555ddd600000066dddddd6600000066dddddd600000000000000000000000000000000000000000000000000000000
d6eeee6d666d6666dddd666666666666ddd0dddd6dddddd66ddd00066dddddd66ddd000600000000000000000000000000000000000000000000000000000000
d6eeee6d0ddd6666dddd666666666666dddd0ddd6dddddd6600d00066dddddd6600d000600000000000000000000000000000000000000000000000000000000
d66ee66ddddd6666dddd0d0d66666666ddd5555d6dddddd6600dddd66dddddd6600dddd600000000000000000000000000000000000000000000000000000000
dd6666dddddddd0ddddd0ddd66666666ddddd0dd600000066dddd006600000066dddd00600000000000000000000000000000000000000000000000000000000
6dddddd66dddddd66ddd0dd6666666666dddd0d66000000660000006600000066000000600000000000000000000000000000000000000000000000000000000
44444444444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
49999444a44aa44a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
49994444aa4a94a90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
49944494a94a94a90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
49444994a9a999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44449994d999999d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44499994dd6995dd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44444444ddd65ddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000005666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666605
15949494940576666666666666666636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363624
00000000000000005666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666674
64049494040576666666666666666636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636362424
0000000000c4d4d45666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666605
15949494940576666666666666666636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636362400
0000000000c5d5d55666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666605
15949494940576666666666666666636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636242400
00000000000000005666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666605
15949494940576666666666666666636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363624240000
00000000000000005666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666605
15949494940566666666666666666636363636363636363636363636363636363636363636363636363636363636363636363636363636363624242424000000
00000000000000004444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
44444444444444444444444444444444242424242424242424242424242424242424242424242424242424242424242424242424242424242424000000000000
00000000000000000000000000000000000000004400000000000000000000000000004400000000000000000000000000000000000044000000000000000000
00000000004400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000004400000000000000000000000000004400000000000000000000000000000000000044000000000000000000
00000000004400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000004400000000000000000000000000444400000000000000000000000000000000000044000000000000000000
00000000444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000004444000000000000000000000000440000000000000000000000000000000000000044440000000000000000
00000000440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000044440000000000000000000044000000000000000000000000000000000000000000444400000000000000
00000044000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000444400000000000000444444444400000000000000000000000000000000000000004444000000000000
00444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000004444444444444444440000004444440000000000000000000000000000000000000044444444444444
44440000004444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000004444000000000000444444000000000000000000000000000000000000000000000044
44000000000000444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000044444400000000000044440000000000000000000000000000000000000000000000
44444400000000000044440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000004444440000000044440000000000000000000000000000000000000000000000
00004444440000000044440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000444444004444000000000000000000000000000000000000000000000000
00000000444444004444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000044444400000000000000000000000000000000000000000000000000
00000000000044444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
1111111111111111cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
1116111111611111cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
1116111111611111cc777c7c7c777c777cccccc7ccc77777ccc7cccccc777cc77ccccc777c777c7c7c777ccccc777c777ccccccccccccccccccccccccccccccc
1116111111611111ccc7cc7c7c777c7c7ccccc7ccc777c777ccc7cccccc7cc7c7ccccc777c7c7c7c7c7cccccccc7ccc7cccccccccccccccccccccccccccccccc
1116111111611111ccc7cc7c7c7c7c777ccccc7ccc77ccc77ccc7cccccc7cc7c7ccccc7c7c777c77cc77ccccccc7ccc7cccccccccccccccccccccccccccccccc
1111111111111811ccc7cc7c7c7c7c7ccccccc7ccc77ccc77ccc7cccccc7cc7c7ccccc7c7c7c7c7c7c7cccccccc7ccc7cccccccccccccccccccccccccccccccc
8111116111111811cc77ccc77c7c7c7cccccccc7ccc77777ccc7ccccccc7cc77cccccc7c7c7c7c7c7c777ccccc777cc7cccccccccccccccccccccccccccccccc
8111116111111811cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
8111116111111811cc777c7c7c777cc77c7c7cc77c7c7ccccc777c7c7c777cccccc77c777c777cc77cc77ccccccccccccccccccccccccccccccccccccccccccc
8111111111111811ccc7cc7c7c7c7c7c7c7c7c7ccc7c7cccccc7cc7c7c7ccccccc7ccc7c7c7c7c7ccc7c7ccccccccccccccccccccccccccccccccccccccccccc
1811111111111811ccc7cc777c77cc7c7c7c7c7ccc777cccccc7cc777c77cccccc7ccc777c77cc7ccc7c7ccccccccccccccccccccccccccccccccccccccccccc
1811111111118111ccc7cc7c7c7c7c7c7c7c7c7c7c7c7cccccc7cc7c7c7ccccccc7ccc7c7c7c7c7c7c7c7ccccccccccccccccccccccccccccccccccccccccccc
1881111111118111ccc7cc7c7c7c7c77ccc77c777c7c7cccccc7cc7c7c777cccccc77c7c7c7c7c777c77cccccccccccccccccccccccccccccccccccccccccccc
1188111111881111cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
1111888888811111cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
1111111111111111cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
64646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
6a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a66
a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666969666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666994576666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666699944556666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
6a666a666a666a666a666a666a666a69444cfa666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a66
a666a666a666a666a666a666a666a69444fcf666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666
66666666666666666666666666666664ffffff666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666fffff6666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
6666666666666666666666666666666999ff66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666664449996666666666666666666666666666666666666666666666444444444444444444444444444444446666666666666
66666666666666666666666666666666455499666666666666666666666666666666666666666666666499994444999944449999444499994446666666666666
66666666666666666666666666666666455449666666666666666666666666666666666666666666666499944444999444449994444499944446666666666666
6a666a666a666a666a666a666a666a644cc44a666a666a666a666a666a666a666a666a666a666a666a64994449449944494499444944994449466a666a666a66
a666a666a666a666a666a666a666a6644cc4a666a666a666a666a666a666a666a666a666a666a666a66494449944944499449444994494449946a666a666a666
66666666666666666666666666666666444466666666666666666666666666666666666666666666666444499944444999444449994444499946666666666666
66666666666666666666666666666666cc5566666666666666666666666666666666666666666666666444999944449999444499994444999946666666666666
66666666666666666666666666666666cc5556666666666666666666666666666666666666666666666444444444444444444444444444444446666666666666
66666666666666666664444444444444444444444444444444466666666666666666666666666666666444444444444444444444444444444446666666666666
66666666666666666664999944449999444499994444999944466666666666666666666666666666666499994444999944449999444499994446666666666666
66666666666666666664999444449994444499944444999444466666666666666666666666666666666499944444999444449994444499944446666666666666
6a666a666a666a666a64994449449944494499444944994449466a666a666a666a666a666a666a666a64994449449944494499444944994449466a666a666a66
a666a666a666a666a66494449944944499449444994494449946a666a666a666a666a666a666a666a66494449944944499449444994494449946a666a666a666
66666666666666666664444999444449994444499944444999466666666666666666666666666666666444499944444999444449994444499946666666666666
66666666666666666664449999444499994444999944449999466666666666666666666666666666666444999944449999444499994444999946666666666666
66666666666666666664444444444444444444444444444444466666666666666666666666666666666444444444444444444444444444444446666666666666
66666666666444444444444444444444444444444444444444444444444666666666666666666666666444444444444444444444444444444446666666666666
66666666666499994444999944449999444499994444999944449999444666666666666666666666666499994444999944449999444499994446666666666666
66666666666499944444999444449994444499944444999444449994444666666666666666666666666499944444999444449994444499944446666666666666
6a666a666a649944494499444944994449449944494499444944994449466a666a666a666a666a666a64994449449944494499444944994449466a666a666a66
a666a666a664944499449444994494449944944499449444994494449946a666a666a666a666a666a66494449944944499449444994494449946a666a666a666
66666666666444499944444999444449994444499944444999444449994666666666666666666666666444499944444999444449994444499946666666666666
66666666666444999944449999444499994444999944449999444499994666666666666666666666666444999944449999444499994444999946666666666666
66666666666444444444444444444444444444444444444444444444444666666666666666666666666444444444444444444444444444444446666666666666
44884499448844994488449944884499448844994488449944884499448844994488449944884499448844994488449944884499448844994488449944884499
99449944994499449944994499449944994499449944994499449944394499449944994499449944994499443944994439449944994499449944994499449944
44994488449944884499448844994488449944884499448844994483333944884499448844994488449944833339448333394488449944884499448844994483
99449944994499449944994499449944994499449944994499449944334499449944994499449944994499443344994433449944994499449944994499449944
44884499448844994488449944884499448844994488449944884499438844994488449944884499448844994388449943884499448844994488449944884499
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
65656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__gff__
0001000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000000101000000000000000001010101010101010100000000000000010101010100000000000000000000000000000000000000000000000000000001010000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000005152535353535353535353535353535353535353535353535353535353535353535353535371424242000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000005163636363636363636363636363636363636363636363494949496363636363636363635051606042424200000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000005163636363636363636363636363636363636363636363494949496363636363636363635051606060604242420000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000005163636363636363636363636363636363636363636363494949496363636363636363635051606060606060424242000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000005163636363636363636363636363636363444444445051494949495044444463636363635051606060606060606042424200000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000505152535353535353535353535353535353535353535353535353535353535353535163636363636363636363707070636363636363635051496049495051636363636363635051606060606060606060604242420000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000505165656565656565655063636363636363636363636363636363636363636363636363636363636363636363707070636363636363635051404949405051636363636363635051606060606060606060606060424242000000000000000000000000000000000000000000000000000000000000000000
0000000000000000505165656565656565655063636363636363636363636363636363636363636363636363636363636363636363707070636363636363635051494949495051636363636363635051606060606060606060606060606042424200000000000000000000000000000000000000000000000000000000000000
00000000000000005051654a4b65656565655063636363636363636363636370707070636363636363636363636370707070636363707070636363636363635051494949495051636363636363635051606060606060606060606060606060604242420000000000000000000000000000000000000000000000000000000000
00000000000000005051655a5b65656565656363636363707070706363636370707070636363636363636363707070707070636363636363636363636363705051404949405051636363636363635051606060606060606060606060606060606060424242000000000000000000000000000000000000000000000000000000
0000000000000000505155566565656564656363636370707070707063636370707070636363636363636363707070707070636363636363636363636370705051494949495051636363636363635051606060606060606060606060606060606060606042424200000000000000000000000000000000000000000000000000
0000000000000000474640404040404041414140404040404040404140404041414040404140404040404040404040404040404040404040404040404040404746494949494746404040404040404746404040404040404040404040404040404040404040404242420000000000000000000000000000000000000000000000
0000000000000000505165656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565655051404949405067676767676767676763636363636363636363636363636363636363636363636363424242000000000000000000000000000000000000000000
0000000000000000505165636563656365636563656365636563656365636563656365636563656365636563656365636563656365636563656365636563655051494949495067676767676767676763636363636363636363636363636363636363636363636363636342424200000000000000000000000000000000000000
00000000004c4d4d505165656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565655051494949495067676767676767676763636363636363636363636363636363636363636363636363636363634242420000000000000000000000000000000000
00000000005c5d5d505163656365636563656365636563656365636563656365636563656365636563656365636563656365636563656365636563656365634746404949405067676767676767676763636363636363636363636363636363636363636363636363636363636363424242000000000000000000000000000000
0000000000000000505165656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565494949495067676767676767676763636363636363636363636363636363636363636363636363636363636363636342424200000000000000000000000000
0000000000000000505165656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565494949495067676767676767676763636363636363636363636363636363636363636363636363636363636363636363634242420000000000000000000000
0000000000000000474640404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040405051494949495044676767676767676763636363636363636363636363636363636363636363636363636363636363636363636363424242000000000000000000
0000000000000000636767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767675051496049495051676767676767676763636363636363636363636363636363636363636363636363636363636363636363636363636342424200000000000000
0000000000000000636767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767675051404949405051676767676767676763636363636363636363636363636363636363636363636363636363636363636363636363636363634242420000000000
0000000000000000636767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767675051494949495051676767676767676763636363636363636363636363636363636363636363636363636363636363636363636363636363636363424242000000
0000000000000000636767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767675051494949495051676767676767676763636363636363636363636363636363636363636363636363636363636363636363636363636363636363636342424200
0000000000000000636767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767675051404949405051676767676767676763636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363634242
0000000000000000636767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767675051494949495051676767676767676763636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636342
0000000000000000636767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767674746494949494746676767676767676763636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636342
0000000000000000636767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767675051404949405067676767676767676763636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636342
0000000000000000636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363635051494949495067636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636342
