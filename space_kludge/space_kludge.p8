pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
-- space kludge
-- by kat and nina

function colliding_p_r(point, rect)
  return point.x >= rect.x and point.x <= rect.x + 8 and
         point.y >= rect.y and point.y <= rect.y + 8
end  -- colliding

function colliding_r_r(rect1, rect2)
  return rect1.x <= rect2.x + 8 and
         rect1.x + 8 >= rect2.x and
         rect1.y <= rect2.y + 8 and
         rect1.y + 8 >= rect2.y
end

function colliding_r_player(rect)
  -- the player is two rectangles stacked on top of each other
  return colliding_r_r(g_player, rect) or
         colliding_r_r({x = g_player.x, y = g_player.y + 8}, rect)
end

function create_player()
  return {
    x = 88,
    y = 114,
    dx = 0,
    dy = 0.2,
    facing = 1,
    inventory = {},
    show_inventory = false,
    equipped_item = nil,
    hp = 6,

    -- the number of frames you can hold the jump button to go higher
    jump_ticks = 0,

    draw = function(self)
      -- todo draw proper death animation
      if self.hp > 0 then
        spr(0, self.x, self.y, 1, 2, self.facing != 1)
      end
    end,  -- player:draw

    update = function(self)
      if self.hp <= 0 then
        return
      end

      if btnp(‚ùé) then
        self.show_inventory = not self.show_inventory
        self.selected_index = 0
      end

      if self.show_inventory then
        if btn(‚¨áÔ∏è) then
          self.selected_index += 1
        elseif btn(‚¨ÜÔ∏è) then
          self.selected_index -= 1
        elseif btnp(üÖæÔ∏è) then
          if self.equipped_item == self.inventory[self.selected_index] then
            self.equipped_item = nil
          else
            self.equipped_item = self.inventory[self.selected_index]
          end
        end
        self.selected_index = mid(1, self.selected_index, #self.inventory)
      else
        if btn(‚û°Ô∏è) then
          self.dx = 1
          self.facing = 1
        elseif btn(‚¨ÖÔ∏è) then
          self.dx = -1
          self.facing = -1
        else
          self.dx = 0
        end

        if btnp(‚¨áÔ∏è) then
          for actor in all(g_actors) do
            if actor.activatable and
               colliding_p_r({x = self.x + 4, y = self.y + 8}, actor) then
              actor:activate()
              return
            end
          end
        end
      end

      local points = {
        { x = self.x, y = self.y + 15 },
        { x = self.x + 7, y = self.y + 15 },
        { x = self.x, y = self.y + 7 },
        { x = self.x + 7, y = self.y + 7 },
        { x = self.x, y = self.y },
        { x = self.x + 7, y = self.y },
      }
      local on_floor = false
      for point in all(points) do
        -- vertical collisions
        if g_map:is_solid(point.x, point.y + sgn(self.dy)) then
          local tile_y = g_map:clamp(point.x, point.y + sgn(self.dy)).y
          if self.dy < 0 then
            -- hit a ceiling
            self.y = tile_y + 8
          else
            self.y = tile_y - 16
            -- hit a floor
            on_floor = true
          end
          self.dy = 0
        end

        -- horizontal collisions
        if g_map:is_solid(point.x + sgn(self.dx), point.y) then
          self.dx = 0
        end

        -- pick up items
        for actor in all(g_actors) do
          if actor.pickable and colliding_r_player(actor) then
            add(self.inventory, actor)
            self.equipped_item = actor
            del(g_actors, actor)
          end
        end
      end

      if not on_floor then
        -- downwards acceleration
        self.dy = min(self.dy + 0.1, 3)
      end

      self.x += self.dx
      self.y += self.dy

      if not self.show_inventory then
        if btn(‚¨ÜÔ∏è) and on_floor then
          -- jump
          self.jump_ticks = 15
        end

        if self.jump_ticks > 0 then
          self.jump_ticks -= 1
          if btn(‚¨ÜÔ∏è) then
            self.dy = -1.8
          end
        end

        if btn(üÖæÔ∏è) then
          if self.equipped_item then
            self.equipped_item:use()
          end
        end
      end
    end,  -- player:update

    draw_inventory = function(self)
      camera()
      rectfill(18, 28, 120, 100, 0)
      rect(17, 27, 121, 101, 1)
      print("inventory", 40, 30, 7)
      for i = 1, #self.inventory do
        print(self.inventory[i].name, 40, 30 + i * 10, 7)
        if i == self.selected_index then
          spr(0, 22, 30 + i * 10)
        end
        if self.equipped_item == self.inventory[i] then
          print("e", 32, 30 + i * 10, 8)
        end
      end
      if #self.inventory <= 0 then
        print("[empty]", 40, 40, 7)
      end
      camera(g_camera.x, g_camera.y)
    end,  -- player:draw_inventory

    take_damage = function(self, damage)
      self.hp -= damage
      self.dy = -1
    end,  -- player:take_damage
  }
end  -- create_player

function create_dialog(messages)
  return {
    ticks = 0,
    messages = messages,

    set = function(self, messages)
      self.messages = messages
      self.ticks = 0
    end,  -- dialog:set

    update = function(self)
      if #self.messages <= 0 then
        return true
      end
      self.ticks += 1
      self.current_message = sub(self.messages[1].text, 0, self.ticks / 5)
      if self.ticks / 5 > #self.messages[1].text + 12
         and not self.messages[1].persistent then
        self.ticks = 0
        deli(self.messages, 1)
      end
    end,  -- dialog:update

    draw = function(self)
      if #self.messages <= 0 then
        return
      end
      camera()
      rectfill(0, 0, 127, 15, 12)
      print(self.current_message, 18, 2, 7)
      spr(self.messages[1].sprite, 0, 0, 2, 2)
      camera(g_camera.x, g_camera.y)
    end,  -- dialog:draw
  }
end  -- create_dialog

function create_extinguisher(x, y)
  return {
    x = x,
    y = y,
    pickable = true,
    name = "fire extinguisher",
    draw = function()
      spr(36, x, y)
    end,  -- extinguisher:draw
    use = function()
      local x_offset = 0
      if g_player.facing == 1 then
        x_offset = 8
      end
      add(g_actors, {
        x = g_player.x + x_offset,
        y = g_player.y + 8,
        dx = g_player.facing + rnd(2) - 1,
        dy = rnd(1),
        life = 30,
        color = flr(rnd(2)) + 6,

        update = function(self)
          self.life -= 1
          if self.life <= 0 then
            return true
          end
          if g_map:is_solid(self.x + self.dx, self.y) then
            self.dx *= -1
          end
          if g_map:is_solid(self.x, self.y + self.dy) then
            self.dy *= -1
          end
          self.x += self.dx
          self.y += self.dy

          for actor in all(g_actors) do
            if actor.name == "fire" then
              if colliding_p_r(self, actor) then
                actor:take_damage(1)
                return true
              end
            end
          end
        end,  -- extinguisher_particle:update

        draw = function(self)
          pset(self.x, self.y, self.color)
        end,  -- extinguisher_particle:draw
      })
    end,  -- extinguisher:use
  }
end  -- create_extinguisher

function create_enemy(x, y, name, hp)
  return {
    x = x,
    y = y,
    dx = 0,
    dy = 0,
    name = name,
    hp = hp,
    damage = 1,

    update = function(self)
      if self.hp <= 0 then
        return true
      end

      self.x += self.dx
      self.y += self.dy

      if colliding_r_player(self) then
        g_player:take_damage(self.damage)
      end
    end,  -- enemy:update()

    take_damage = function(self, damage)
      self.hp -= damage
    end,  -- enemy:take_damage
  }
end  -- create_enemy

function create_switch(x, y, target)
  return {
    x = x,
    y = y,
    target = target,
    on = false,
    activatable = true,

    update = function(self)
    end,  -- switch:update

    draw = function(self)
      if self.on then
        pal({[8] = 11})
      end
      spr(37, self.x, self.y)
      pal()
    end,  -- switch:draw

    activate = function(self)
      self.on = not self.on
      self.target:toggle(self.on)
    end
  }
end

function create_door(x, y, size)
  return {
    x = x,
    y = y,
    size = size,
    status = "closing",
    is_solid = true,
    pixels_up = 0,
    direction = 1,

    get_rects = function(self)
      local rects = {}
      for i = 0, (size - 1) do
        add(rects, {x = self.x, y = self.y + i * 8})
      end
      return rects
    end,  -- door:get_rects

    update = function(self)
      if self.direction == -1 and self.pixels_up < size * 8 then
        self.pixels_up += 1
        if self.pixels_up >= size * 8 then
          self.is_solid = false
        end
      elseif self.direction == 1 and self.pixels_up > 0 then
        self.pixels_up -= 1
        self.is_solid = true
      end
    end,  -- door:update

    draw = function(self)
      palt(0, false)
      clip(x - flr(g_camera.x), y - flr(g_camera.y), 8, 8 * size)
      for i = 0, (size - 1) do
        local sprite = 38
        if i >= 1 then
          sprite += 16
        end
        if self.direction == -1 then
          sprite += 1
        end
        spr(sprite, x, y + i * 8 - self.pixels_up)
      end
      clip()
      palt()
    end,  -- door:draw

    collides_with = function(self, x, y)
      for rect in all(self:get_rects()) do
        if colliding_p_r({x = x, y = y}, rect) then
          return true
        end
      end
    end,  -- door:collides_with_player

    toggle = function(self, on)
      if on then
        self.direction = -1
      else
        for rect in all(self:get_rects()) do
          if colliding_r_player(rect) then
            if g_player.x < rect.x + 4 then
              g_player.x = rect.x - 8
            else
              g_player.x = rect.x + 9
            end
          end
        end
        self.direction = 1
      end
    end,  -- door:toggle
  }
end  -- create_door

function create_fire(x, y)
  local fire = create_enemy(x, y, "fire", 12)

  fire.draw = function(self)
    local sprite
    if self.hp > 8 then
      sprite = 108
    elseif self.hp > 4 then
      sprite = 109
    else
      sprite = 110
    end
    if flr(time() * 10) % 2 == 0 then
      sprite += 16
    end
    spr(sprite, self.x, self.y)
  end  -- fire:draw
  return fire
end  -- create_fire

function create_tutorial_script(messages, target)
  local first_time = true

  return {
    toggle = function(self, on)
      if first_time then
        g_dialog:set(messages)
        first_time = false
      end
      target:toggle(on)
    end,  -- switch.target:toggle
  }
end  -- create_tutorial_script

function _init()
  g_player = create_player()
  g_actors = {}

  add(g_actors, create_door(144, 104, 2))
  add(g_actors, create_switch(136, 112, create_tutorial_script({
    {
      text = "jump (‚¨ÜÔ∏è) to make it\nthrough the cargo",
      sprite = 32,
      persistent = true,
    }
  }, g_actors[#g_actors])))
  add(g_actors, create_switch(152, 112, g_actors[#g_actors - 1]))
  add(g_actors, create_door(512, 40, 3))
  add(g_actors, create_switch(504, 56, create_tutorial_script({
    {
      text = "make haste!\ni need to use that toilet!",
      sprite = 32,
    },
    {
      text = "use the teleporter to\nquickly get there",
      sprite = 32,
      persistent = true,
    },
  }, g_actors[#g_actors])))
  add(g_actors, create_door(554, 40, 3))
  add(g_actors, create_switch(562, 56, g_actors[#g_actors]))

  g_map = {
    draw = function(self)
      map(0, 0, 0, 0, 128, 64)
    end,  -- map:draw

    get_sprite = function(self, x, y)
      return mget(x \ 8, y \ 8)
    end,  -- map:get_sprite

    is_solid = function(self, x, y)
      if fget(self:get_sprite(x, y), 0) then
        return true
      end
      for actor in all(g_actors) do
        if actor.is_solid and actor:collides_with(x, y) then
          return true
        end
      end
    end,  -- map:is_solid

    clamp = function(self, x, y)
      return { x = (x \ 8) * 8, y = (y \ 8) * 8 }
    end,  -- map:coordinates_for
  }

  g_camera = {
    x = g_player.x - 64,
    y = g_player.y - 64,

    update = function(self, player)
      if player.dx > 0 and player.x - self.x > 30 then
        -- the player is moving to the right
        if player.x - self.x - player.dx - 1 <= 30 then
          self.x = player.x - 30
        else
          self.x += player.dx + 1
        end
      elseif player.dx < 0 and player.x - self.x < 98 then
        -- the player is moving to the left
        if player.x - self.x - player.dx + 1 >= 98 then
          self.x = player.x - 98
        else
          self.x += player.dx - 1
        end
      end

      self.y = player.y - 64
    end,  -- camera:update
  }

  g_dialog = create_dialog({
    {
      text = "amber! amber! wake up!\nwe have an emergency!",
      sprite = 32,
    },
    {
      text = "the toilet in cargo bay c\nis clogged again!",
      sprite = 32,
    },
    {
      text = "can you go take a look?",
      sprite = 32,
    },
    {
      text = "open (‚¨áÔ∏è) that door and get\nthere quick!",
      sprite = 32,
      persistent = true,
    },
  })
  add(g_actors, g_dialog)

  add(g_actors, g_player)
end  -- _init()

function _update60()
  for actor in all(g_actors) do
    if actor.update and actor:update() then
      del(g_actors, actor)
    end
  end
end  -- _update60

function _draw()
  cls()
  g_camera:update(g_player)
  camera(g_camera.x, g_camera.y)
  g_map:draw()
  for actor in all (g_actors) do
    actor:draw()
  end
  if g_player.show_inventory then
    g_player:draw_inventory()
  end
end  -- _draw
__gfx__
00909000444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00994570445555440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99944550454554540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
09444cf0455445540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9444fcf0455445540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
04ffffff454554540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00fffff0445555440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0999ff00444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
04449990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00455499000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00455449000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
044cc440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
044cc400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00cc5500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00cc5550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111111111110000000000000000000000000001100044444444444444444444444400000000000000000000000000000000000000000000000000000000
11161111116111110000000000000000000888000011510045555554455555544444444400000000000000000000000000000000000000000000000000000000
111611111161111100000000000000000455580001151110a4444449a44444494444444400000000000000000000000000000000000000000000000000000000
11161111116111110000eeee0ee0000004555880015118119447754a9447754a4444444400000000000000000000000000000000000000000000000000000000
1116111111611111000e000e0eee00000055588809118110a4788859a47000594444444400000000000000000000000000000000000000000000000000000000
111111111111181100ee0000ee0ee00000055000009111409458a85a945b0b5a4444444400000000000000000000000000000000000000000000000000000000
811111611111181100e00000e000e0000005500000991440a4588859a450b0594444444400000000000000000000000000000000000000000000000000000000
811111611111181100e00000e000e00000055000099944409445554a9445554a4444444400000000000000000000000000000000000000000000000000000000
811111611111181100ee00000000e0000000000000000000a4455549a44444490000000000000000000000000000000000000000000000000000000000000000
8111111111111811000e00000000e00000000000000000009444444a9444444a0000000000000000000000000000000000000000000000000000000000000000
1811111111111811000e00000000e0000000000000000000a4444449a44444490000000000000000000000000000000000000000000000000000000000000000
18111111111181110000e000000ee00000000000000000009444444a9444444a0000000000000000000000000000000000000000000000000000000000000000
18811111111181110000ee00000e00000000000000000000a4444449a44444490000000000000000000000000000000000000000000000000000000000000000
118811111188111100000e0000ee000000000000000000009444444a9444444a0000000000000000000000000000000000000000000000000000000000000000
1111888888811111000000ee00e000000000000000000000a4444449a44444490000000000000000000000000000000000000000000000000000000000000000
11111111111111110000000eee00000000000000000000009444444a9444444a0000000000000000000000000000000000000000000000000000000000000000
84499448844994484994499449904994999999999999999905506664466605500000000099ddddd6000000000000000000000000000000000000000000000000
499449944994439444994499440944994444444444444444005565644656005500000000dddddddd000000000000000000000000000000000000000000000000
9448844994483333449944994499409940444404404444045005666446660005000000004ddddddd000000000000000000000000000000000000000000000000
499449944994433444994499449940994440044444400444555555544555555500000000dddddddd000000000000000000000000000000000000000000000000
8449944884499438944994499449940940444404404400046565656445656565000000004ddddddd000000000000000000000000000000000000000000000000
666666666666666666666666666666066666666666666666666666666666666600000000dddddddd000000000000000000000000000000000000000000000000
5656565656565656565656565656565056565656565656565656565656565656000000005ddddddd000000000000000000000000000000000000000000000000
55555555555555555555555555555555555555555555555555555555555555550000000055ddddd6000000000000000000000000000000000000000000000000
46660550055066645555555555555555555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
46560055005565645555555555555555555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
46665005500566645555555555555555555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
45555500550055545566666666666666666666550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
46660550055066645666666666666666666666650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
46560055005565646666666666666666666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
46665005500566644646464646464646646464640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
45555500550055544444444444444444444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6dddddd6655dddd66dddddd66666666660ddddd66dddddd6600000066dddddd66dddddd600000000000000000000000000000000000000000000000000000000
dd6666dd555dd0dddddddddd66666666dd0ddddddddddddd6000ddd66dddddd660d0000600000000000000000000000000000000000000000000000000000000
d660066d5550dd0ddddd555566666666d5555ddddddddddd60ddd006600000066dddddd600000000000000000000000000000000000000000000000000000000
d600006d555d5555dddd555566a666a6ddd0dddddddddddd60d000066dddddd66ddd000600000000000000000000000000000000000000000000000000000000
d600006d0ddd5555dddd55556a666a66dddd0ddddddddddd6ddd00066dddddd6600d000600000000000000000000000000000000000000000000000000000000
d660066ddddd5555dddd0d0d66666666ddd5555ddddddddd6d0dd0066dddddd6600dddd600000000000000000000000000000000000000000000000000000000
dd6666dddddddd0ddddd0ddd66666666ddddd0dddddddddd6d0dd006600000066dddd00600000000000000000000000000000000000000000000000000000000
6dddddd66dddddd66ddd0dd6666666666dddd0d66dddddd66dddddd6600000066000000600000000000000000000000000000000000000000000000000000000
44444444444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
49999444a44aa44a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
49994444aa4a94a90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
49944494a94a94a90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
49444994a9a999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44449994099999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44499994006995000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44444444000650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
1111111111111111cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
1116111111611111cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
1116111111611111cc777c7c7c777c777cccccc7ccc77777ccc7cccccc777cc77ccccc777c777c7c7c777ccccc777c777ccccccccccccccccccccccccccccccc
1116111111611111ccc7cc7c7c777c7c7ccccc7ccc777c777ccc7cccccc7cc7c7ccccc777c7c7c7c7c7cccccccc7ccc7cccccccccccccccccccccccccccccccc
1116111111611111ccc7cc7c7c7c7c777ccccc7ccc77ccc77ccc7cccccc7cc7c7ccccc7c7c777c77cc77ccccccc7ccc7cccccccccccccccccccccccccccccccc
1111111111111811ccc7cc7c7c7c7c7ccccccc7ccc77ccc77ccc7cccccc7cc7c7ccccc7c7c7c7c7c7c7cccccccc7ccc7cccccccccccccccccccccccccccccccc
8111116111111811cc77ccc77c7c7c7cccccccc7ccc77777ccc7ccccccc7cc77cccccc7c7c7c7c7c7c777ccccc777cc7cccccccccccccccccccccccccccccccc
8111116111111811cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
8111116111111811cc777c7c7c777cc77c7c7cc77c7c7ccccc777c7c7c777cccccc77c777c777cc77cc77ccccccccccccccccccccccccccccccccccccccccccc
8111111111111811ccc7cc7c7c7c7c7c7c7c7c7ccc7c7cccccc7cc7c7c7ccccccc7ccc7c7c7c7c7ccc7c7ccccccccccccccccccccccccccccccccccccccccccc
1811111111111811ccc7cc777c77cc7c7c7c7c7ccc777cccccc7cc777c77cccccc7ccc777c77cc7ccc7c7ccccccccccccccccccccccccccccccccccccccccccc
1811111111118111ccc7cc7c7c7c7c7c7c7c7c7c7c7c7cccccc7cc7c7c7ccccccc7ccc7c7c7c7c7c7c7c7ccccccccccccccccccccccccccccccccccccccccccc
1881111111118111ccc7cc7c7c7c7c77ccc77c777c7c7cccccc7cc7c7c777cccccc77c7c7c7c7c777c77cccccccccccccccccccccccccccccccccccccccccccc
1188111111881111cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
1111888888811111cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
1111111111111111cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
64646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
6a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a66
a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666969666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666994576666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666699944556666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
6a666a666a666a666a666a666a666a69444cfa666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a66
a666a666a666a666a666a666a666a69444fcf666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666a666
66666666666666666666666666666664ffffff666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666666fffff6666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
6666666666666666666666666666666999ff66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
66666666666666666666666666666664449996666666666666666666666666666666666666666666666444444444444444444444444444444446666666666666
66666666666666666666666666666666455499666666666666666666666666666666666666666666666499994444999944449999444499994446666666666666
66666666666666666666666666666666455449666666666666666666666666666666666666666666666499944444999444449994444499944446666666666666
6a666a666a666a666a666a666a666a644cc44a666a666a666a666a666a666a666a666a666a666a666a64994449449944494499444944994449466a666a666a66
a666a666a666a666a666a666a666a6644cc4a666a666a666a666a666a666a666a666a666a666a666a66494449944944499449444994494449946a666a666a666
66666666666666666666666666666666444466666666666666666666666666666666666666666666666444499944444999444449994444499946666666666666
66666666666666666666666666666666cc5566666666666666666666666666666666666666666666666444999944449999444499994444999946666666666666
66666666666666666666666666666666cc5556666666666666666666666666666666666666666666666444444444444444444444444444444446666666666666
66666666666666666664444444444444444444444444444444466666666666666666666666666666666444444444444444444444444444444446666666666666
66666666666666666664999944449999444499994444999944466666666666666666666666666666666499994444999944449999444499994446666666666666
66666666666666666664999444449994444499944444999444466666666666666666666666666666666499944444999444449994444499944446666666666666
6a666a666a666a666a64994449449944494499444944994449466a666a666a666a666a666a666a666a64994449449944494499444944994449466a666a666a66
a666a666a666a666a66494449944944499449444994494449946a666a666a666a666a666a666a666a66494449944944499449444994494449946a666a666a666
66666666666666666664444999444449994444499944444999466666666666666666666666666666666444499944444999444449994444499946666666666666
66666666666666666664449999444499994444999944449999466666666666666666666666666666666444999944449999444499994444999946666666666666
66666666666666666664444444444444444444444444444444466666666666666666666666666666666444444444444444444444444444444446666666666666
66666666666444444444444444444444444444444444444444444444444666666666666666666666666444444444444444444444444444444446666666666666
66666666666499994444999944449999444499994444999944449999444666666666666666666666666499994444999944449999444499994446666666666666
66666666666499944444999444449994444499944444999444449994444666666666666666666666666499944444999444449994444499944446666666666666
6a666a666a649944494499444944994449449944494499444944994449466a666a666a666a666a666a64994449449944494499444944994449466a666a666a66
a666a666a664944499449444994494449944944499449444994494449946a666a666a666a666a666a66494449944944499449444994494449946a666a666a666
66666666666444499944444999444449994444499944444999444449994666666666666666666666666444499944444999444449994444499946666666666666
66666666666444999944449999444499994444999944449999444499994666666666666666666666666444999944449999444499994444999946666666666666
66666666666444444444444444444444444444444444444444444444444666666666666666666666666444444444444444444444444444444446666666666666
44884499448844994488449944884499448844994488449944884499448844994488449944884499448844994488449944884499448844994488449944884499
99449944994499449944994499449944994499449944994499449944394499449944994499449944994499443944994439449944994499449944994499449944
44994488449944884499448844994488449944884499448844994483333944884499448844994488449944833339448333394488449944884499448844994483
99449944994499449944994499449944994499449944994499449944334499449944994499449944994499443344994433449944994499449944994499449944
44884499448844994488449944884499448844994488449944884499438844994488449944884499448844994388449943884499448844994488449944884499
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
65656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__gff__
0001000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000000101000000000000000001010101010101010100000000000000010101010100010000000000000000000000000000000000000000000000000001010000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000005152535353535353535353535353535353535353535353535353535353535353535353535354000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000005163636363636363636363636363636363636363636363494949496363636363636363635051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000005163636363636363636363636363636363636363636363494949496363636363636363635051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000005163636363636363636363636363636363636363636363494949496363636363636363635051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000005163636363636363636363636363636363444444445051494949495044444463636363635051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000505152535353535353535353535353535353535353535353535353535353535353535163636363636363636363707070636363636363635051496049495051636363636363635051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000505165656565656565655063636363636363636363636363636363636363636363636363636363636363636363707070636363636363635051404949405051636363636363635051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000505165656565656565655063636363636363636363636363636363636363636363636363636363636363636363707070636363636363635051494949495051636363636363635051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000505165656065656565655063636363636363636363636370707070636363636363636363636370707070636363707070636363636363635051494949495051636363636363635051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000505165656565656565656363636363707070706363636370707070636363636363636363707070707070636363636363636363636363705051494949495051636363636363635051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000505165656565656564656363636370707070707063636370707070636363636363636363707070707070636363636363636363636370705051494949495051636363636363635051000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000474640404040404041414140404040404040404140404041414040404140404040404040404040404040404040404040404040404040404746424242424746404040404040404746000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
